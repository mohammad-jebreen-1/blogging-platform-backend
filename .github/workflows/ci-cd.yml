name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  build_and_deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t blogging-platform-backend .

      - name: Run Docker container with secrets
        run: |
          docker run -d --name blogging-platform-backend -p 3500:3500 \
            -e APP_ENVIRONMENT=${{ secrets.APP_ENVIRONMENT }} \
            -e SERVER_PORT=${{ secrets.SERVER_PORT }} \
            -e CORS_ORIGIN=${{ secrets.CORS_ORIGIN }} \
            -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DB_NAME=${{ secrets.DB_NAME }} \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            -e DB_PORT=${{ secrets.DB_PORT }} \
            -e PASSWORD_SALT_ROUNDS=${{ secrets.PASSWORD_SALT_ROUNDS }} \
            -e ACCESS_TOKEN_EXPIRY=${{ secrets.ACCESS_TOKEN_EXPIRY }} \
            -e ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }} \
            -e OTP_TOKEN_EXPIRY=${{ secrets.OTP_TOKEN_EXPIRY }} \
            blogging-platform-backend

      - name: Wait for the container to be ready
        run: sleep 10

      - name: Deploy to Heroku (example)
        run: |
         echo "Deploying to Heroku..."
         echo "curl https://cli-assets.heroku.com/install.sh | sh"
         echo "heroku login -i"
         echo "heroku container:login"
         echo "heroku container:push web -a your-heroku-app"
         echo "heroku container:release web -a your-heroku-app"
        # Example of Deploy to Heroku
